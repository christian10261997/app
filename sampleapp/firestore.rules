rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read and update user documents (for subscription management)
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    // Recipes collection - users can manage their own recipes
    match /recipes/{recipeId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Support messages collection - MAIN COLLECTION FOR MESSAGING SYSTEM
    match /support_messages/{messageId} {
      // Users can create messages and read their own messages
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Users can update status and updatedAt fields of their own messages (for marking as read)
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId &&
        // Only allow updating status and updatedAt fields
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']) &&
        // Only allow status change from 'unread' to 'read' or from 'read' to 'read'
        (resource.data.status == 'unread' && request.resource.data.status == 'read') ||
        (resource.data.status == 'read' && request.resource.data.status == 'read');
      
      // Admins can read and update all messages (for responding)
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    // Subscription requests collection
    match /subscription_requests/{requestId} {
      // Users can create and read their own subscription requests
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Admins can read and update all subscription requests
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
